import Cocoa

// 마방진
// 가로/세로/대각선 합이 모두 같은 행렬

// s[n][n]
// n = 3
// 1 <= s[i][j] <= 9

// 숫자 1~9의 합은 45, 세 개의 가로 행에는 9개 숫자 포함되어야한다.
// 45/3(n) = 15 -> 가로/세로/대각선 합은 15

// 1-9, 2-8, 3-7, 4-6, 5
// s[1][1] = 5

// 1 5 9
// 2 5 8
// 3 5 7
// 4 5 6
// 2 4 9
// 1 6 8
// 2 6 7
// 3 4 8

// 모서리 숫자는 가로/세로/대각선 모두 표시되므로 3번 나오는 숫자 -> 2, 4, 6, 8

// 대각선 "2 5 8", "4 5 6"

// 2   4
//   5
// 6   8

// 4   8
//   5
// 2   6

// 8   4
//   5
// 6   2
func formingMagicSquare(s: [[Int]]) -> Int {
    var minCost = 81
    let magicMat = [
        [[8, 1, 6], [3, 5, 7], [4, 9, 2]],
        [[6, 1, 8], [7, 5, 3], [2, 9, 4]],
        [[4, 9, 2], [3, 5, 7], [8, 1, 6]],
        [[2, 9, 4], [7, 5, 3], [6, 1, 8]],
        [[8, 3, 4], [1, 5, 9], [6, 7, 2]],
        [[4, 3, 8], [9, 5, 1], [2, 7, 6]],
        [[6, 7, 2], [1, 5, 9], [8, 3, 4]],
        [[2, 7, 6], [9, 5, 1], [4, 3, 8]]
    ]
    
    for mat in magicMat {
        var cost = 0
        for i in 0...2 {
            for j in 0...2 {
                cost += abs(s[i][j]-mat[i][j])
            }
        }
        
        if cost < minCost {
            minCost = cost
        }
    }
    
    return minCost
}

formingMagicSquare(s: [[8, 1, 6], [3, 5, 7], [4, 9, 2]])
